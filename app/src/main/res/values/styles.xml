<resources>

    <!--
        默认主题，继承 Theme.AppCompat.Light.DarkActionBar 主题
        引用示例参见 AndroidManifest.xml（作用于整个 application）
    -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar" >
        <!--
            用于全局指定 Spinner 弹出的下拉框的分隔线
        -->
        <item name="android:dropDownListViewStyle">@style/MyDropDownListViewStyle</item>
    </style>
    <!--
        继承上面的 AppTheme 主题，即继承 Theme.AppCompat.Light.DarkActionBar 主题，并重写其中的一些样式（关于修改主题中指定控件的默认样式请参见 ui/ThemeDemo3）
        引用示例参见 ui/ThemeDemo1
    -->
    <style name="ThemeDemo1Theme" parent="AppTheme">
        <!--AppBar 的背景-->
        <item name="colorPrimary">@color/red</item>
        <!--控件被选中时的颜色-->
        <item name="colorAccent">@color/purple</item>
        <!--页面背景色-->
        <item name="android:windowBackground">@color/orange</item>
        <!--顶部 StatusBar 的背景-->
        <item name="android:statusBarColor">@color/blue</item>
        <!--底部 NavigationBar 的背景-->
        <item name="android:navigationBarColor">@color/green</item>
    </style>


    <!--
        自定义主题 1（属性的名字和类型是在 res/values/attrs.xml 中定义的）
        引用示例参见 ui/ThemeDemo2
    -->
    <style name="ThemeDemo2Theme1" parent="AppTheme" >
        <item name="myTitleColor">@color/red</item>
        <item name="myTitleBackgroundColor">@color/green</item>
    </style>
    <!--
        自定义主题 2（属性的名字和类型是在 res/values/attrs.xml 中定义的）
        引用示例参见 ui/ThemeDemo2
    -->
    <style name="ThemeDemo2Theme2" parent="AppTheme" >
        <item name="myTitleColor">@color/blue</item>
        <item name="myTitleBackgroundColor">@color/orange</item>
    </style>


    <!--
        通过主题修改控件的默认样式
        通过“ctrl + 鼠标左键”一步一步地找出你需要修改的控件的默认样式，然后复制过来重写就好
     -->
    <style name="ThemeDemo3Theme" parent="AppTheme">
        <item name="buttonStyle">@style/ThemeDemo3ButtonStyle</item>
        <item name="android:textViewStyle">@style/ThemeDemo3TextViewStyle</item>
    </style>
    <style name="ThemeDemo3ButtonStyle" parent="android:Widget">
        <item name="android:textColor">@color/white</item>
        <item name="android:background">@color/orange</item>
    </style>
    <style name="ThemeDemo3TextViewStyle" parent="android:Widget.TextView">
        <item name="android:textColor">@color/orange</item>
        <item name="android:textAppearance">?android:attr/textAppearanceLarge</item>
    </style>


    <!--
        继承 v7 包的 Widget.AppCompat.Button 样式，并重写其中的一些样式
        引用示例参见 ui/StyleDemo1
    -->
    <style name="StyleDemo1ButtonStyle" parent="Widget.AppCompat.Button">
        <item name="android:textColor">@color/orange</item>
        <item name="android:background">@color/green</item>
    </style>


    <!--
        引用示例参见 view/text/TextViewDemo5
    -->
    <style name="TextAppearanceSpanStyle" parent="@android:style/Widget.TextView">
        <item name="android:textColor">#FF0000</item>
        <item name="android:textStyle">italic</item>
        <item name="android:fontFamily">serif</item>
        <item name="android:textSize">32dp</item>
    </style>


    <!--
        引用示例参见 view/selection/SwitchDemo2
    -->
    <style name="MySwitchTextAppearance" parent="@android:style/TextAppearance.Holo.Small">
        <item name="android:textColor">@color/orange</item>
    </style>


    <!--
        引用示例参见 view/selection/SpinnerDemo2
    -->
    <style name="MySpinnerStyle" parent="Base.Widget.AppCompat.Spinner">
        <!--
            自定义 Spinner 右侧的箭头，以及 Spinner 本身的背景和边框
        -->
        <item name="android:background">@drawable/selector_spinner_background</item>
    </style>
    <!--
        用于在某主题下全局指定 Spinner 弹出的下拉框的分隔线（需要在根主题中引用此样式，否则无效）
    -->
    <style name="MyDropDownListViewStyle" parent="android:style/Widget.ListView.DropDown">
        <item name="android:divider">#ff0000</item>
        <item name="android:dividerHeight">1dp</item>
    </style>


    <!--
        引用示例参见 view/progress/SeekBarDemo2（通过 minHeight, maxHeight 来指定 SeekBar 的高度）
    -->
    <style name="MySeekBarStyle" >
        <item name="android:minHeight">10dp</item>
        <item name="android:maxHeight">10dp</item>
        <item name="android:progressDrawable">@drawable/layerlist_seekbar_progress</item>
        <item name="android:thumb">@drawable/selector_seekbar_thumb</item>
    </style>


    <!--
        引用示例参见 view/progress/RatingBarDemo2（通过 minHeight, maxHeight 来指定 RatingBar 的高度）
    -->
    <style name="MyRatingBarStyle" parent="@android:style/Widget.RatingBar">
        <item name="android:minHeight">40dp</item>
        <item name="android:maxHeight">40dp</item>
        <item name="android:progressDrawable">@drawable/layerlist_ratingbar_progress</item>
    </style>

</resources>
