<resources>

    <!--
        默认主题，继承 Theme.AppCompat.Light.DarkActionBar 主题
        引用示例参见 AndroidManifest.xml
    -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar" />


    <!--
        继承上面的 AppTheme 主题，即继承 Theme.AppCompat.Light.DarkActionBar 主题，并重写其中的一些样式（其他的更多可重写的样式查文档吧）
        引用示例参见 ui/ThemeDemo1
    -->
    <style name="ThemeDemo1Theme" parent="AppTheme">
        <!--AppBar 的背景-->
        <item name="colorPrimary">@color/red</item>
        <!--控件被选中时的颜色-->
        <item name="colorAccent">@color/purple</item>
        <!--页面背景色-->
        <item name="android:windowBackground">@color/orange</item>
        <!--顶部 StatusBar 的背景-->
        <item name="android:statusBarColor">@color/blue</item>
        <!--底部 NavigationBar 的背景-->
        <item name="android:navigationBarColor">@color/green</item>
    </style>


    <!--
        自定义主题 1（属性的名字和类型是在 res/values/attrs.xml 中定义的）
        引用示例参见 ui/ThemeDemo2
    -->
    <style name="ThemeDemo2Theme1" parent="AppTheme" >
        <item name="myTitleColor">@color/red</item>
        <item name="myTitleBackgroundColor">@color/green</item>
    </style>
    <!--
        自定义主题 2（属性的名字和类型是在 res/values/attrs.xml 中定义的）
        引用示例参见 ui/ThemeDemo2
    -->
    <style name="ThemeDemo2Theme2" parent="AppTheme" >
        <item name="myTitleColor">@color/blue</item>
        <item name="myTitleBackgroundColor">@color/orange</item>
    </style>



    <!--
        引用示例参见 view/text/TextViewDemo5
    -->
    <style name="TextAppearanceSpanStyle" parent="@android:style/Widget.TextView">
        <item name="android:textColor">#FF0000</item>
        <item name="android:textStyle">italic</item>
        <item name="android:fontFamily">serif</item>
        <item name="android:textSize">32dp</item>
    </style>


    <!--
        引用示例参见 view/selection/SwitchDemo2
    -->
    <style name="MySwitchTextAppearance" parent="@android:style/TextAppearance.Holo.Small">
        <item name="android:textColor">@color/orange</item>
    </style>


    <!--
        引用示例参见 view/progress/SeekBarDemo2（通过 minHeight, maxHeight 来指定 SeekBar 的高度）
    -->
    <style name="MySeekBarStyle" >
        <item name="android:minHeight">10dp</item>
        <item name="android:maxHeight">10dp</item>
        <item name="android:progressDrawable">@drawable/layerlist_seekbar_progress</item>
        <item name="android:thumb">@drawable/selector_seekbar_thumb</item>
    </style>


    <!--
        引用示例参见 view/progress/RatingBarDemo2（通过 minHeight, maxHeight 来指定 RatingBar 的高度）
    -->
    <style name="MyRatingBarStyle" parent="@android:style/Widget.RatingBar">
        <item name="android:minHeight">40dp</item>
        <item name="android:maxHeight">40dp</item>
        <item name="android:progressDrawable">@drawable/layerlist_ratingbar_progress</item>
    </style>

</resources>
